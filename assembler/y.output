Terminals unused in grammar

   LOOP


Grammar

    0 $accept: file $end

    1 file: file instruction
    2     | %empty

    3 instruction: push_stmt
    4            | load_stmt
    5            | POP
    6            | IADD
    7            | IMINUS
    8            | IMULTI
    9            | IDIVIDE
   10            | FADD
   11            | FMINUS
   12            | FMULTI
   13            | FDIVIDE
   14            | BIT_AND
   15            | BIT_OR
   16            | JUMP INTEGER
   17            | JUMPF INTEGER
   18            | LESS
   19            | ARGS INTEGER
   20            | CALL INTEGER
   21            | RET
   22            | HALT

   23 push_stmt: PUSH INTEGER
   24          | PUSH _FLOAT

   25 load_stmt: LOAD INTEGER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 16 17 19 20 23 25
_FLOAT (259) 24
PUSH (260) 23 24
IADD (261) 6
IMINUS (262) 7
IMULTI (263) 8
IDIVIDE (264) 9
FADD (265) 10
FMINUS (266) 11
FMULTI (267) 12
FDIVIDE (268) 13
BIT_OR (269) 15
BIT_AND (270) 14
LOAD (271) 25
JUMP (272) 16
JUMPF (273) 17
HALT (274) 22
POP (275) 5
LESS (276) 18
LOOP (277)
ARGS (278) 19
CALL (279) 20
RET (280) 21


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
file (27)
    on left: 1 2, on right: 0 1
instruction (28)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 1
push_stmt (29)
    on left: 23 24, on right: 3
load_stmt (30)
    on left: 25, on right: 4


State 0

    0 $accept: . file $end

    $default  reduce using rule 2 (file)

    file  go to state 1


State 1

    0 $accept: file . $end
    1 file: file . instruction

    $end     shift, and go to state 2
    PUSH     shift, and go to state 3
    IADD     shift, and go to state 4
    IMINUS   shift, and go to state 5
    IMULTI   shift, and go to state 6
    IDIVIDE  shift, and go to state 7
    FADD     shift, and go to state 8
    FMINUS   shift, and go to state 9
    FMULTI   shift, and go to state 10
    FDIVIDE  shift, and go to state 11
    BIT_OR   shift, and go to state 12
    BIT_AND  shift, and go to state 13
    LOAD     shift, and go to state 14
    JUMP     shift, and go to state 15
    JUMPF    shift, and go to state 16
    HALT     shift, and go to state 17
    POP      shift, and go to state 18
    LESS     shift, and go to state 19
    ARGS     shift, and go to state 20
    CALL     shift, and go to state 21
    RET      shift, and go to state 22

    instruction  go to state 23
    push_stmt    go to state 24
    load_stmt    go to state 25


State 2

    0 $accept: file $end .

    $default  accept


State 3

   23 push_stmt: PUSH . INTEGER
   24          | PUSH . _FLOAT

    INTEGER  shift, and go to state 26
    _FLOAT   shift, and go to state 27


State 4

    6 instruction: IADD .

    $default  reduce using rule 6 (instruction)


State 5

    7 instruction: IMINUS .

    $default  reduce using rule 7 (instruction)


State 6

    8 instruction: IMULTI .

    $default  reduce using rule 8 (instruction)


State 7

    9 instruction: IDIVIDE .

    $default  reduce using rule 9 (instruction)


State 8

   10 instruction: FADD .

    $default  reduce using rule 10 (instruction)


State 9

   11 instruction: FMINUS .

    $default  reduce using rule 11 (instruction)


State 10

   12 instruction: FMULTI .

    $default  reduce using rule 12 (instruction)


State 11

   13 instruction: FDIVIDE .

    $default  reduce using rule 13 (instruction)


State 12

   15 instruction: BIT_OR .

    $default  reduce using rule 15 (instruction)


State 13

   14 instruction: BIT_AND .

    $default  reduce using rule 14 (instruction)


State 14

   25 load_stmt: LOAD . INTEGER

    INTEGER  shift, and go to state 28


State 15

   16 instruction: JUMP . INTEGER

    INTEGER  shift, and go to state 29


State 16

   17 instruction: JUMPF . INTEGER

    INTEGER  shift, and go to state 30


State 17

   22 instruction: HALT .

    $default  reduce using rule 22 (instruction)


State 18

    5 instruction: POP .

    $default  reduce using rule 5 (instruction)


State 19

   18 instruction: LESS .

    $default  reduce using rule 18 (instruction)


State 20

   19 instruction: ARGS . INTEGER

    INTEGER  shift, and go to state 31


State 21

   20 instruction: CALL . INTEGER

    INTEGER  shift, and go to state 32


State 22

   21 instruction: RET .

    $default  reduce using rule 21 (instruction)


State 23

    1 file: file instruction .

    $default  reduce using rule 1 (file)


State 24

    3 instruction: push_stmt .

    $default  reduce using rule 3 (instruction)


State 25

    4 instruction: load_stmt .

    $default  reduce using rule 4 (instruction)


State 26

   23 push_stmt: PUSH INTEGER .

    $default  reduce using rule 23 (push_stmt)


State 27

   24 push_stmt: PUSH _FLOAT .

    $default  reduce using rule 24 (push_stmt)


State 28

   25 load_stmt: LOAD INTEGER .

    $default  reduce using rule 25 (load_stmt)


State 29

   16 instruction: JUMP INTEGER .

    $default  reduce using rule 16 (instruction)


State 30

   17 instruction: JUMPF INTEGER .

    $default  reduce using rule 17 (instruction)


State 31

   19 instruction: ARGS INTEGER .

    $default  reduce using rule 19 (instruction)


State 32

   20 instruction: CALL INTEGER .

    $default  reduce using rule 20 (instruction)
